steps:

  - id: 'Build: docker image'
    name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', '.',
      '-f', 'Dockerfile.prod',
      '-t', 'gcr.io/$PROJECT_ID/build:$COMMIT_SHA',
    ]

    ##############################################

  - id: 'Migrate: database'
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [
      'run',
      '-w', '/app/packages/api',
      '-e', 'DATABASE_URL=$$DATABASE_URL',
      'gcr.io/$PROJECT_ID/build:$COMMIT_SHA',
      'yarn', 'migrate:deploy'
    ]
    secretEnv: ['DATABASE_URL']
    waitFor:
      - 'Build: docker image'

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/build:$COMMIT_SHA']
    waitFor:
      - 'Migrate: database'

  ##############################################

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '$_CLOUD_RUN_SERVICE_NAME',
      '--image', 'gcr.io/$PROJECT_ID/build:$COMMIT_SHA',
      '--region', 'asia-northeast1',
      '--platform', 'managed',
      '--memory', '256Mi',
      '--set-cloudsql-instances', '${_CLOUD_SQL_CONNECTION_NAME}',
      '--allow-unauthenticated',
      '--set-env-vars', '
        TZ=Asia/Tokyo,
        DATABASE_URL=$$DATABASE_URL'
    ]

images:
  - gcr.io/$PROJECT_ID/build:$COMMIT_SHA

options:
  pool:
    name: projects/$PROJECT_ID/locations/asia-northeast1/workerPools/buildpool
  dynamic_substitutions: true

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/latest
      env: DATABASE_URL